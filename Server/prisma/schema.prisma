generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Account {
  account_id    String    @id(map: "PK__Account__46A222CD8EBCF1A8") @db.VarChar(225)
  email         String    @db.VarChar(225)
  account_name  String    @db.NVarChar(225)
  hash_password String?   @db.Text
  isBan         Boolean?  @default(false, map: "DF__Account__isBan__3D5E1FD2")
  role_id       Int?      @default(3, map: "DF__Account__role_id__3E52440B")
  created_date  DateTime? @default(now(), map: "DF__Account__created__403A8C7D") @db.Date
  Role          Role?     @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Account__role_id__3F466844")
  Comment       Comment[]
  Favor         Favor[]   @ignore
  Post          Post[]
  Product       Product[]
}

model Category {
  category_id   Int    @id(map: "PK__Category__D54EE9B41BEC975F") @default(autoincrement())
  category_name String @db.NVarChar(100)
  Post          Post[]
}

model Comment {
  comment_id   String    @id(map: "PK__Comment__E79576877C4E2C4B") @db.VarChar(225)
  content      String    @db.NText
  account_id   String?   @db.VarChar(225)
  post_id      String?   @db.VarChar(225)
  created_date DateTime? @default(now(), map: "DF__Comment__created__4D94879B") @db.Date
  created_by   String?   @db.VarChar(225)
  Account      Account?  @relation(fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Comment__created__4E88ABD4")
  Post         Post?     @relation(fields: [post_id], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Comment__post_id__4CA06362")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Favor {
  account_id String?  @db.VarChar(225)
  product_id String?  @db.VarChar(225)
  Account    Account? @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Favor__account_i__5070F446")
  Product    Product? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Favor__product_i__5165187F")

  @@ignore
}

model Post {
  post_id      String    @id(map: "PK__Post__3ED787668178EF2A") @db.VarChar(225)
  title        String    @db.NVarChar(100)
  content      String    @db.NText
  language     String?   @default("Vietnamese", map: "DF__Post__language__46E78A0C") @db.NVarChar(100)
  category_id  Int?
  created_date DateTime? @default(now(), map: "DF__Post__created_da__48CFD27E") @db.Date
  created_by   String?   @db.VarChar(225)
  Comment      Comment[]
  Category     Category? @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Post__category_i__47DBAE45")
  Account      Account?  @relation(fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Post__created_by__49C3F6B7")
}

model Product {
  product_id   String        @id(map: "PK__Product__47027DF5E660038A") @db.VarChar(225)
  product_name String        @db.NVarChar(225)
  description  String?       @db.NText
  image        String?       @db.Text
  video        String?       @db.Text
  created_date DateTime?     @default(now(), map: "DF__Product__created__4316F928") @db.Date
  created_by   String?       @db.VarChar(225)
  Favor        Favor[]       @ignore
  Account      Account?      @relation(fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Product__created__440B1D61")
  Product_Tag  Product_Tag[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Product_Tag {
  product_id String?  @db.VarChar(225)
  tag_id     Int?
  Product    Product? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Product_T__produ__534D60F1")
  Tag        Tag?     @relation(fields: [tag_id], references: [tag_id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Product_T__tag_i__5441852A")

  @@ignore
}

model Role {
  role_id   Int       @id(map: "PK__Role__760965CCCD1FC4C5") @default(autoincrement())
  role_name String    @db.NVarChar(100)
  Account   Account[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61C67350EA") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Tag {
  tag_id      Int           @id(map: "PK__Tag__4296A2B6FD0F64FB") @default(autoincrement())
  tag_name    String        @db.NVarChar(100)
  Product_Tag Product_Tag[] @ignore
}
